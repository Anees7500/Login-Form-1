{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/guard/auth.guard.ts","webpack:///src/app/core/services/backend.service.ts","webpack:///src/app/core/services/login.service.ts","webpack:///src/app/core/services/register.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","beService","next","state","localStorage","getItem","user","firstName","getData","lastName","username","phone","navigate","queryParams","returnUrl","url","providedIn","BackendService","key","record","value","setItem","LoginService","form","password","setData","RegisterService","HomeComponent","logout","LoginComponent","formBuilder","loginService","_snackBar","submitted","loginForm","group","required","controls","invalid","console","log","login","open","duration","onSubmit","RegisterComponent","registerService","registerForm","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './core/guard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  {\r\n    path: 'home',\r\n    canActivate: [AuthGuard],\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-9-material-registration-login-example';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { BackendService, User } from '../services/backend.service'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private beService : BackendService) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (localStorage.getItem('isLoggedIn') === 'true') {\r\n      let user : User = {}\r\n      user.firstName = this.beService.getData('firstName')\r\n      user.lastName = this.beService.getData('lastName')\r\n      user.username = this.beService.getData('username')\r\n      user.phone = this.beService.getData('phone')\r\n      this.beService.user = user;\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendService {\r\n\r\n  user : User\r\n  constructor() { }\r\n\r\n   getData (key : string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n  setData(record: Record) {\r\n    const key  = record.key;\r\n    const value = record.value;\r\n    localStorage.setItem(key , value);\r\n  }\r\n}\r\nexport interface Record {\r\n  key : string,\r\n  value : any\r\n}\r\nexport interface User {\r\n  firstName? : string\r\n  lastName? : string\r\n  username? : string\r\n  password? : string\r\n  phone?: string\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private beService : BackendService) { }\r\n\r\n  login(form : any) {\r\n    const username = form.username;\r\n    const password = form.password;\r\n    if (this.beService.getData('username') === username && this.beService.getData('password') === password) {\r\n      this.beService.setData({ key : 'isLoggedIn', value : true});\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BackendService, User } from './backend.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private beService : BackendService) { }\r\n  setData (user : User) {\r\n    this.beService.setData({ key : \"firstName\", value:  user.firstName});\r\n    this.beService.setData({ key : \"lastName\", value:  user.lastName});\r\n    this.beService.setData({ key : \"username\", value:  user.username});\r\n    this.beService.setData({ key : \"password\", value:  user.password});\r\n    this.beService.setData({ key : \"phone\", value:  user.phone});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService, User } from '../core/services/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  user : User\r\n  constructor(private beService : BackendService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.beService.user\r\n  }\r\n  getData() {\r\n\r\n\r\n  }\r\n  logout() {\r\n    this.beService.setData({ key : 'isLoggedIn' , value : false});\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"position-absolute\" color=\"primary\">\r\n  <mat-toolbar-row class=\"justify-content-between\">\r\n    <button [routerLink]=\"['/home']\" mat-button>Home</button>\r\n    <button (click)=\"logout()\" mat-button>Logout</button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <mat-card>\r\n          <h3 class=\"text-left\"> Name: {{user?.firstName}} {{user?.lastName}}</h3>\r\n          <h3 class=\"text-left\"> Email: {{user?.username}} </h3>\r\n          <h3 class=\"text-left\"> Contact: {{user?.phone}} </h3>\r\n\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router,\r\n    private loginService: LoginService,\r\n    private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get data() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.invalid) {\r\n      console.log('invalid')\r\n      return;\r\n    }\r\n    if (this.loginService.login(this.loginForm.value)) {\r\n      this._snackBar.open('Login Successful', 'Success', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/'])\r\n    } else {\r\n      this._snackBar.open('Error Login', 'OK', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"submitted\">\r\n          Username or password is incorrect\r\n        </div>\r\n        <mat-card>\r\n          <h3 class=\"text-center\">Login</h3>\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"form-group mt-4\">\r\n              <button mat-raised-button color=\"primary\">Login</button>\r\n              <a [routerLink]=\"['/register']\" class=\"ml-2\" mat-button color=\"primary\">Register</a>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RegisterService } from '../core/services/register.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private _snackBar: MatSnackBar,\r\n    private registerService : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      phone: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get data() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.registerService.setData(this.registerForm.value);\r\n      this._snackBar.open('Register Successfully', 'Success', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <mat-card>\r\n          <h3 class=\"text-center\">Register</h3>\r\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"First Name\" formControlName=\"firstName\">\r\n              <mat-error *ngIf=\"data.firstName.errors?.required\">First Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Last Name\" formControlName=\"lastName\">\r\n              <mat-error *ngIf=\"data.lastName.errors?.required\">Last Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\r\n            </mat-form-field>\r\n               <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Phone Number\" formControlName=\"phone\">\r\n              <mat-error *ngIf=\"data.phone.errors?.required\">Phone Number is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"mt-4\">\r\n              <button mat-raised-button color=\"primary\">Register</button>\r\n              <a [routerLink]=\"['/login']\" class=\"ml-2\" mat-button color=\"primary\">Cancel</a>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}