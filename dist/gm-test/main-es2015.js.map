{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/guard/auth.guard.ts","./src/app/core/services/backend.service.ts","./src/app/core/services/login.service.ts","./src/app/core/services/register.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './core/guard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  {\r\n    path: 'home',\r\n    canActivate: [AuthGuard],\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-9-material-registration-login-example';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { BackendService, User } from '../services/backend.service'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private beService : BackendService) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (localStorage.getItem('isLoggedIn') === 'true') {\r\n      let user : User = {}\r\n      user.firstName = this.beService.getData('firstName')\r\n      user.lastName = this.beService.getData('lastName')\r\n      user.username = this.beService.getData('username')\r\n      user.phone = this.beService.getData('phone')\r\n      this.beService.user = user;\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendService {\r\n\r\n  user : User\r\n  constructor() { }\r\n\r\n   getData (key : string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n  setData(record: Record) {\r\n    const key  = record.key;\r\n    const value = record.value;\r\n    localStorage.setItem(key , value);\r\n  }\r\n}\r\nexport interface Record {\r\n  key : string,\r\n  value : any\r\n}\r\nexport interface User {\r\n  firstName? : string\r\n  lastName? : string\r\n  username? : string\r\n  password? : string\r\n  phone?: string\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private beService : BackendService) { }\r\n\r\n  login(form : any) {\r\n    const username = form.username;\r\n    const password = form.password;\r\n    if (this.beService.getData('username') === username && this.beService.getData('password') === password) {\r\n      this.beService.setData({ key : 'isLoggedIn', value : true});\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BackendService, User } from './backend.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private beService : BackendService) { }\r\n  setData (user : User) {\r\n    this.beService.setData({ key : \"firstName\", value:  user.firstName});\r\n    this.beService.setData({ key : \"lastName\", value:  user.lastName});\r\n    this.beService.setData({ key : \"username\", value:  user.username});\r\n    this.beService.setData({ key : \"password\", value:  user.password});\r\n    this.beService.setData({ key : \"phone\", value:  user.phone});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService, User } from '../core/services/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  user : User\r\n  constructor(private beService : BackendService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.beService.user\r\n  }\r\n  getData() {\r\n\r\n\r\n  }\r\n  logout() {\r\n    this.beService.setData({ key : 'isLoggedIn' , value : false});\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"position-absolute\" color=\"primary\">\r\n  <mat-toolbar-row class=\"justify-content-between\">\r\n    <button [routerLink]=\"['/home']\" mat-button>Home</button>\r\n    <button (click)=\"logout()\" mat-button>Logout</button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <mat-card>\r\n          <h3 class=\"text-left\"> Name: {{user?.firstName}} {{user?.lastName}}</h3>\r\n          <h3 class=\"text-left\"> Email: {{user?.username}} </h3>\r\n          <h3 class=\"text-left\"> Contact: {{user?.phone}} </h3>\r\n\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router,\r\n    private loginService: LoginService,\r\n    private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get data() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.invalid) {\r\n      console.log('invalid')\r\n      return;\r\n    }\r\n    if (this.loginService.login(this.loginForm.value)) {\r\n      this._snackBar.open('Login Successful', 'Success', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/'])\r\n    } else {\r\n      this._snackBar.open('Error Login', 'OK', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"submitted\">\r\n          Username or password is incorrect\r\n        </div>\r\n        <mat-card>\r\n          <h3 class=\"text-center\">Login</h3>\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"form-group mt-4\">\r\n              <button mat-raised-button color=\"primary\">Login</button>\r\n              <a [routerLink]=\"['/register']\" class=\"ml-2\" mat-button color=\"primary\">Register</a>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RegisterService } from '../core/services/register.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private _snackBar: MatSnackBar,\r\n    private registerService : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      phone: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get data() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.registerService.setData(this.registerForm.value);\r\n      this._snackBar.open('Register Successfully', 'Success', {\r\n        duration: 2000,\r\n      });\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-center h-100\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm-5\">\r\n        <mat-card>\r\n          <h3 class=\"text-center\">Register</h3>\r\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"First Name\" formControlName=\"firstName\">\r\n              <mat-error *ngIf=\"data.firstName.errors?.required\">First Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Last Name\" formControlName=\"lastName\">\r\n              <mat-error *ngIf=\"data.lastName.errors?.required\">Last Name is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100\">\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\r\n            </mat-form-field>\r\n               <mat-form-field class=\"w-100\">\r\n              <input type=\"text\" matInput placeholder=\"Phone Number\" formControlName=\"phone\">\r\n              <mat-error *ngIf=\"data.phone.errors?.required\">Phone Number is required</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"mt-4\">\r\n              <button mat-raised-button color=\"primary\">Register</button>\r\n              <a [routerLink]=\"['/login']\" class=\"ml-2\" mat-button color=\"primary\">Cancel</a>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}